#!/bin/bash

echo "enter the URL of the video you would like to download."
read URL
echo "What are you trying to download?"
echo "A - mp3 single audio: This choice is for downloading one video in audio format out of a playlist or just for the URL of a single video."
echo "B - mp3 playlist audio: This choice is for downloading a playlist of videos in audio format into a folder."
echo "C - mp4 single video: This choice is for downloading a single video out of a playlist or just a single video."
echo "D - mp4 playlist video: This choice is for downloading a playlist of videos into a folder."
echo "E - both mp3 single and mp4 single: This choice is for downloading a video in mp3 and mp4 formats."
echo "Please type the letter that corresponds to your choice."
read TYPE
# Update youtube-dl script!
youtube-dl -U
# Get the youtube video title and store it in a variable.
# Due to that some programs that this script rely on are allergic to some special characters the following line will replace them with underscores
# videoTitleFormat=${formats[videoTitleRaw]//[\'\-\.\(\)\$\!\%\&\*\#\|\"\`\ \&\:\-\–\,]/_}
# declare most variables in associative arrays.
declare -A lists=([mp3List]=$(date +'%D_%H_%M_%S')'_mp3_list' [mp4List]=$(date +'%D_%H_%M_%S')'_mp4_list' [Mp3List]=${lists[mp3List]//[\/\:]/_} [Mp4List]=${lists[mp4List]//[\/\:]/_})
declare -A formats=( [videoTitleRaw]=$(youtube-dl -e -s --no-playlist $URL) )
declare -A singles=( [videoTitleFormat]=${formats[videoTitleRaw]//[\'\-\.\(\)\$\!\%\&\*\#\|\"\`\ \&\:\-\–\,\/]/_} [videoTitle]=${singles[videoTitleFormat]}'_Video' [audioTitle]=${singles[videoTitleFormat]}'_Audio' )
declare -A main=( [url]=$URL [type]=$TYPE [workingDirectory]=$(pwd) [cleanVideoTitle]=$videoTitleFormat )

function mp3_single_function {

    mkdir ${main[workingDirectory]}/${singles[audioTitle]}
    cd ${singles[audioTitle]}
    youtube-dl -cwix --http-chunk-size 10M -r 10M --no-playlist --restrict-filenames -f "bestaudio/best" -o "%(title)s.%(ext)s" --audio-quality 0 --audio-format mp3 --embed-thumbnail --add-metadata  ${main[url]}
    cd ${main[workingDirectory]}
    echo "The mp3 file has been downloaded to the following directory: " ${singles[audioTitle]}

}

function mp3_list_function {

    mkdir ${main[workingDirectory]}/${lists[Mp3List]}
    cd ${lists[Mp3List]}
    youtube-dl -cwix --http-chunk-size 10M -r 10M --restrict-filenames -f "bestaudio/best" --yes-playlist -ciw -o "%(title)s.%(ext)s" --audio-quality 0 --audio-format mp3 --embed-thumbnail --add-metadata  ${main[url]}
    cd ${main[workingDirectory]}
    echo "The mp3 list has been downloaded to the following directory: " ${lists[Mp3List]}

}

function mp4_list_function {

    mkdir ${main[workingDirectory]}/${lists[Mp4List]}
    cd ${lists[Mp4List]}
    youtube-dl -cwi --http-chunk-size 10M -r 10M --restrict-filenames --yes-playlist -f 'bestvideo[ext=mp4]+bestaudio[ext=m4a]/bestvideo+bestaudio' --merge-output-format mp4 --embed-thumbnail --add-metadata -o '%(title)s.%(ext)s' ${main[url]}
    cd ${main[workingDirectory]}
    echo "The videos playlist has been downloaded to the following directory: " ${lists[Mp4List]}
}

function mp4_single_function {

    mkdir ${main[workingDirectory]}/${singles[videoTitle]}
    cd ${singles[videoTitle]}
    youtube-dl -cwi --http-chunk-size 10M -r 10M --restrict-filenames --no-playlist -f 'bestvideo[ext=mp4]+bestaudio[ext=m4a]/bestvideo+bestaudio' --merge-output-format mp4 --embed-thumbnail --add-metadata -o '%(title)s.%(ext)s' ${main[url]}
    cd ${main[workingDirectory]}
    echo "The video has been downloaded to following directory: " ${singles[videoTitle]}
}

case ${main[type]} in

    A)
        mp3_single_function
        ;;
    B)
        mp3_list_function
        ;;
    C)
        mp4_single_function
        ;;
    D)
        mp4_list_function
        ;;
    E)
        mp4_single_function
        mp3_single_function
        ;;
  *)
    echo "Please check that you passed the correct arguments to the script!"
    echo "youtube-dl-mp4-mp3 <YOUTUBE_VIDEO_URL> <TYPE>"
    echo "Try again"
    ;;
esac
unset main
unset lists
unset singles
unset formats
exit 1
